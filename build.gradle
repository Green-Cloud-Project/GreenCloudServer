plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
    id 'com.google.cloud.tools.jib' version '1.6.0'
}

apply plugin: 'io.spring.dependency-management'

group = 'greencloud'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.google.code.gson:gson:2.8.2'

    implementation 'org.springframework.boot:spring-boot-starter'

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.1'

    compile 'org.json:json:20171018'

    //JDBC추가
    runtimeOnly 'mysql:mysql-connector-java'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.5.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4', version: '1.16'

    //JSP
    compile('org.apache.tomcat.embed:tomcat-embed-jasper')
    compile('javax.servlet:jstl:1.2')

    //Admin
    compile group: 'de.codecentric', name: 'spring-boot-admin-starter-client', version: '2.1.2'
    compile('org.springframework.boot:spring-boot-starter-actuator')
}

bootJar {
    launchScript()
}

jib {
    from {
        image = "openjdk:8-jre-alpine" // 로컬환경에 설치되어 있는 도커데몬에서 Base Image 를 가져온다. (지금 상황에서는 굳이 원격에서 가져올 필요가 없으므로...)
    }
    to {
        image = "greencloud/greencloud-server-application:0.0.1-SNAPSHOT"
    }
    container {
        mainClass = "com.share.greencloud.SpringBootPracticeApplication"
        ports = ["9500"]
        volumes = ["/tmp"]
    }
}
